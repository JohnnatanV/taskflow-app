datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  name         String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  tasks        Task[]
  sessions     Session[]
  verified     Boolean   @default(false)
}

model Session {
  id           String    @id @default(uuid())
  user         User      @relation(fields: [userId], references: [id])
  userId       String
  refreshToken String // store hashed token
  createdAt    DateTime  @default(now())
  lastUsedAt   DateTime?
  expiresAt    DateTime

  @@index([userId])
}

model Task {
  id          String       @id @default(uuid())
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  title       String
  description String?
  completed   Boolean      @default(false)
  isHabit     Boolean      @default(false)
  dueDate     DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  habitSpec   HabitSpec?
  occurrences Occurrence[]

  @@index([userId, dueDate])
}

model HabitSpec {
  id         String    @id @default(uuid())
  task       Task      @relation(fields: [taskId], references: [id])
  taskId     String    @unique
  frequency  String // e.g. "daily", "weekly", or RRULE JSON
  daysOfWeek Int[]     @default([])
  startDate  DateTime?
  endDate    DateTime?
}

model Occurrence {
  id        String   @id @default(uuid())
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    String
  date      DateTime
  completed Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([taskId, date])
}
